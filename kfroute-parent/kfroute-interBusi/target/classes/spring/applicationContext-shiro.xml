<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 强制使用CGLIB代理 -->
	<aop:config proxy-target-class="true" />
	 <!-- 缓存管理器 -->
    <bean id="cacheManager" class="com.melinkr.micro.auth.util.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>
    
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.melinkr.micro.auth.credentials.RetryLimitHashedCredentialsMatcher">
        <!--  <constructor-arg ref="shiroEhcacheManager"/> -->
       
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
    
    <!-- 項目自定义的Realm  change by zhangyl at 2015-07-27 改成cas登陆验证 -->
    <!-- 
	<bean id="shiroDbRealm" class="com.melinkr.micro.auth.AuthDbRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="cachingEnabled" value="false"/>
	</bean>
	 -->
	 <bean id="casRealm" class="cn.melinkr.platform.shiro.auth.AuthCasRealm">
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
         <!-- 测试环境配置 -->
        <!-- 
        <property name="casServerUrlPrefix" value="https://localhost:8443/cas-server"/>
        <property name="casService" value="http://localhost:7003/kfrouteWeb/cas"/>
         -->
        <!-- 正式环境配置 -->
        <property name="casServerUrlPrefix" value="https://crm.kfrouter.com:17001/cas-server"/>
        <property name="casService" value="https://crm.kfrouter.com:16001/pubBusi/cas"/>

    </bean>
	
	<!-- Session 管理 -->
	 
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="259200"/><!-- 30天 2592000 -->
    </bean>

    <!-- rememberMe管理器  后台管理系统无需rememberMe,若有需要可以考虑放开-->
    <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
    <!-- 
    <bean id="" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
      
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
 	--> 
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    
	 <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory"/>
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<!-- 安全管理器 --> 
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="realm" ref="shiroDbRealm" /> -->
		<property name="realm" ref="casRealm" /><!-- 改成cas鉴权 -->
		<property name="sessionManager" ref="sessionManager"/>
		<!-- <property name="cacheManager" ref="shiroEhcacheManager" /> -->
		
		<property name="cacheManager" ref="cacheManager" />
		<!-- 
		<property name="rememberMeManager" ref="rememberMeManager"/>
		 -->
		<property name="subjectFactory" ref="casSubjectFactory"/>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
	<bean id="casFilter" class="com.melinkr.micro.auth.filter.SsoCasFilter">
        <property name="failureUrl" value="/casFailure.jsp"/>
    </bean>
     <bean id="sysUserFilter" class="com.melinkr.micro.auth.filter.SysUserFilter"/>
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- <property name="loginUrl" value="/login" /> -->
		<!-- 测试环境配置 -->
		<!-- 
		<property name="loginUrl" value="https://localhost:8443/cas-server/login?service=http://localhost:7003/kfrouteWeb/cas" />
		 -->
		<!-- 正式环境配置 -->
		
		<property name="loginUrl" value="https://crm.kfrouter.com:17001/cas-server/login?service=https://crm.kfrouter.com:16001/pubBusi/cas" />
		
		<property name="filters">
            <util:map>
                 <entry key="cas" value-ref="casFilter"/>
                 <entry key="sysUser" value-ref="sysUserFilter"/>
            </util:map>
        </property>
		<property name="successUrl" value="/" />
		<property name="filterChainDefinitions">
			<value>
	
				/remoteService = anon
				/captcha-image = anon
				/resources/** = anon
				/static/** = anon
				/anon/** = anon
				/service/** = anon
				/cas = cas
                /logout = logout
                /authenticated = cas
				/** =  user,sysUser
			</value>
		</property>
	</bean>

	
	<!-- Shiro生命周期处理器-->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>